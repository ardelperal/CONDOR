Sub DaoEnsureEngine(ByRef dao)
    On Error Resume Next
    Set dao = CreateObject("DAO.DBEngine.120")
    If Err.Number <> 0 Then Err.Clear: Set dao = CreateObject("DAO.DBEngine.36")
    On Error GoTo 0
End Sub

Function DaoOpenDatabase(dbPath, pwd)
    Dim dao: Call DaoEnsureEngine(dao)
    If pwd <> "" Then
        Set DaoOpenDatabase = dao.OpenDatabase(dbPath, False, False, ";PWD=" & pwd)
    Else
        Set DaoOpenDatabase = dao.OpenDatabase(dbPath, False, False)
    End If
End Function

Function GetMacrosContainerName(db)
    If Not IsEmpty(db.Containers("Scripts")) Then GetMacrosContainerName = "Scripts": Exit Function
    If Not IsEmpty(db.Containers("Macros")) Then GetMacrosContainerName = "Macros": Exit Function
    GetMacrosContainerName = ""
End Function

Function IsEmpty(o) : On Error Resume Next: Dim t: Set t = o: IsEmpty = (Err.Number <> 0): Err.Clear: End Function

Function MacroExists(dbPath, pwd, macroName)
    On Error Resume Next
    Dim db, cName, c, d
    Set db = DaoOpenDatabase(dbPath, pwd)
    If Err.Number <> 0 Then MacroExists = False: Exit Function
    cName = GetMacrosContainerName(db)
    If cName = "" Then MacroExists = False: db.Close: Exit Function
    Set c = db.Containers(cName)
    For Each d In c.Documents
        If LCase(d.Name) = LCase(macroName) Then MacroExists = True: db.Close: Exit Function
    Next
    MacroExists = False
    db.Close
End Function

Sub RenameMacroIfExists(dbPath, pwd, oldName, newName)
    On Error Resume Next
    Dim db, cName, c, d
    Set db = DaoOpenDatabase(dbPath, pwd)
    If Err.Number <> 0 Then Exit Sub
    cName = GetMacrosContainerName(db)
    If cName = "" Then db.Close: Exit Sub
    Set c = db.Containers(cName)
    For Each d In c.Documents
        If LCase(d.Name) = LCase(oldName) Then d.Name = newName: Exit For
    Next
    db.Close
End Sub

Sub DisableStartup(dbPath, pwd, ByRef prevStartupForm, ByRef hadAutoExec)
    On Error Resume Next
    Dim db: Set db = DaoOpenDatabase(dbPath, pwd)
    prevStartupForm = ""
    prevStartupForm = db.Containers("Databases").Documents("UserDefined").Properties("StartupForm").Value
    db.Containers("Databases").Documents("UserDefined").Properties("StartupForm").Value = ""
    hadAutoExec = False
    Dim cName, c, d: cName = GetMacrosContainerName(db)
    If cName <> "" Then
        Set c = db.Containers(cName)
        For Each d In c.Documents
            If LCase(d.Name) = "autoexec" Then d.Name = "AutoExec__CONDOR_DISABLED": hadAutoExec = True: Exit For
        Next
    End If
    db.Close
End Sub

Sub RestoreStartup(dbPath, pwd, prevStartupForm, hadAutoExec)
    On Error Resume Next
    Dim db: Set db = DaoOpenDatabase(dbPath, pwd)
    If prevStartupForm <> "" Then _
        db.Containers("Databases").Documents("UserDefined").Properties("StartupForm").Value = prevStartupForm
    Dim cName, c, d: cName = GetMacrosContainerName(db)
    If hadAutoExec And cName <> "" Then
        Set c = db.Containers(cName)
        For Each d In c.Documents
            If LCase(d.Name) = "autoexec__condor_disabled" Then d.Name = "AutoExec": Exit For
        Next
    End If
    db.Close
End Sub

Sub OpenAccessSilently(dbPath, pwd, ByRef app)
    Set app = CreateObject("Access.Application")
    app.Visible = False
    app.DisplayAlerts = False
    app.UserControl = False
    If pwd <> "" Then
        app.OpenCurrentDatabase dbPath, False, pwd
    Else
        app.OpenCurrentDatabase dbPath, False
    End If
    On Error Resume Next: app.Application.Echo False: On Error GoTo 0
End Sub

Function OpenAccessApp(dbPath, password, bypassStartup)
    Dim app
    If bypassStartup Then
        Call DisableStartup(dbPath, password, gPreviousStartupForm, gPreviousHasAutoExec)
        gBypassStartupEnabled = True
        gCurrentDbPath = dbPath
        gCurrentPassword = password
        Call OpenAccessSilently(dbPath, password, app)
    Else
        Call OpenAccessSilently(dbPath, password, app)
    End If
    If app Is Nothing Then WScript.Echo "ERROR abriendo Access": WScript.Quit 1
    Set OpenAccessApp = app
End Function

Sub CloseAccessApp(app)
    On Error Resume Next
    app.Application.Echo True
    app.CloseCurrentDatabase
    app.Quit
    Set app = Nothing
    If gBypassStartupEnabled Then
        Call RestoreStartup(gCurrentDbPath, gCurrentPassword, gPreviousStartupForm, gPreviousHasAutoExec)
    End If
    gBypassStartupEnabled = False
    gCurrentDbPath = "": gCurrentPassword = ""
    Set gPreviousStartupForm = Nothing: gPreviousHasAutoExec = False
End Sub